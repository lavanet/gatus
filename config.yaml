endpoints:
  - name: front-end
    group: core
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] < 150"

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] > 48h"

  - name: monitoring
    group: internal
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: nas
    group: internal
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: example-dns-query
    url: "8.8.8.8" # Address of the DNS server to use
    interval: 5m
    dns:
      query-name: "example.com"
      query-type: "A"
    conditions:
      - "[BODY] == 93.184.216.34"
      - "[DNS_RCODE] == NOERROR"

  - name: icmp-ping
    url: "icmp://example.org"
    interval: 1m
    conditions:
      - "[CONNECTED] == true"

  - name: check-domain-expiration
    url: "https://example.org/"
    interval: 1h
    conditions:
      - "[DOMAIN_EXPIRATION] > 720h"

  - name: gRPC - list example
    url: "grpc://example.org:443"
    client:
        insecure: true
    grpc:
        verb: 'list'
        service: 'grpc.reflection.v1alpha.ServerReflection'
    conditions:
      - "[BODY] == pat(*grpc.reflection.v1alpha.ServerReflection.*)"

  - name: gRPC - RPC example
    group: paying-customers
    url: grpc://example.com:9090
    client:
        insecure: true
    grpc:
        service: 'foo.bar.Service/GetLatestFoo'
    body: '{"user": "123asdf"}'
    conditions:
      - "[BODY].Foo == 1"
